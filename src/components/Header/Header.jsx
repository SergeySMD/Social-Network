import React from 'react';
import {connect} from "react-redux";
import {getLogout, getMyDataProfile, setAuthUserData} from "../../redux/authReducer";
import s from "./Header.module.css";
import {NavLink} from "react-router-dom";
import userPhoto from "../../assets/images/User_avatar_placeholder.png";

const HeaderUserBlock = (props) => {
    return <div className={s.dropdown}>
        <div className={s.loginBlock}>
            <NavLink to={'/profile/' + props.id}>{props.login}</NavLink>
            <img className={s.avatar} src={props.avatar !== null ? props.avatar : userPhoto}/>
            <div className={s.indicator}/>
        </div>
        <div className={s.dropdownContent}>
            <div className={s.dropdownItem}>
                <NavLink to={`/profile/` + props.id}>
                    <a className={s.a}>My Page</a>
                    {/*<svg className={s.exitLogo} width="16" height="16" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">*/}
                    {/*    <g clip-path="url(#clip0)">*/}
                    {/*        <path d="M17.2253 3.07763C15.3376 1.10731 12.7258 -0.00463753 9.99717 0.000383139C4.48288 -0.00656212 0.00699895 4.45803 5.36927e-05 9.97235C-0.0033771 12.699 1.10845 15.3084 3.07731 17.1947C3.08304 17.2004 3.08517 17.209 3.09086 17.214C3.14868 17.2697 3.21152 17.3168 3.2701 17.3704C3.43076 17.5132 3.59142 17.661 3.76066 17.7988C3.85133 17.8702 3.94559 17.9416 4.03843 18.0073C4.19838 18.1265 4.35833 18.2458 4.52539 18.3558C4.63894 18.4272 4.75605 18.4986 4.8724 18.57C5.02662 18.6628 5.18017 18.7563 5.33941 18.8413C5.47438 18.9127 5.61216 18.9741 5.74926 19.0391C5.89921 19.1105 6.04703 19.1819 6.20054 19.2462C6.35404 19.3104 6.5083 19.3604 6.66395 19.4161C6.81959 19.4718 6.95385 19.5232 7.10309 19.5689C7.27161 19.6196 7.44441 19.6589 7.61578 19.701C7.75858 19.736 7.89711 19.776 8.04421 19.8045C8.24127 19.8438 8.44122 19.8688 8.64117 19.896C8.76472 19.9131 8.88538 19.9374 9.01031 19.9495C9.33737 19.9816 9.66723 19.9995 9.99997 19.9995C10.3327 19.9995 10.6626 19.9816 10.9896 19.9495C11.1146 19.9374 11.2353 19.9131 11.3588 19.896C11.5587 19.8688 11.7586 19.8438 11.9557 19.8045C12.0985 19.776 12.2414 19.7331 12.3842 19.701C12.5555 19.6589 12.7283 19.6196 12.8969 19.5689C13.0461 19.5232 13.1903 19.4675 13.336 19.4161C13.4817 19.3647 13.6473 19.309 13.7994 19.2462C13.9515 19.1833 14.1007 19.1098 14.2507 19.0391C14.3878 18.9741 14.5256 18.9127 14.6605 18.8413C14.8198 18.7563 14.9733 18.6628 15.1275 18.57C15.2439 18.4986 15.361 18.4336 15.4746 18.3558C15.6417 18.2458 15.8016 18.1266 15.9615 18.0073C16.0544 17.9359 16.1486 17.8716 16.2393 17.7988C16.4085 17.6631 16.5692 17.5189 16.7298 17.3704C16.7884 17.3168 16.8512 17.2697 16.9091 17.214C16.9148 17.209 16.9169 17.2004 16.9226 17.1947C20.9046 13.3799 21.04 7.05948 17.2253 3.07763ZM15.6204 16.4471C15.4904 16.5614 15.3561 16.6699 15.2205 16.7749C15.1405 16.8363 15.0606 16.8969 14.9784 16.9555C14.8492 17.0491 14.7178 17.1376 14.5843 17.2226C14.4872 17.2847 14.3879 17.3447 14.2879 17.4032C14.1622 17.4747 14.0344 17.546 13.9052 17.6174C13.7909 17.676 13.6745 17.731 13.5574 17.7853C13.4404 17.8395 13.3111 17.8974 13.1847 17.9481C13.0583 17.9988 12.9241 18.0466 12.792 18.0909C12.6713 18.1323 12.5506 18.1751 12.4285 18.2115C12.2857 18.2544 12.1365 18.2893 11.9887 18.3251C11.873 18.3522 11.7588 18.3829 11.6416 18.4058C11.4724 18.4386 11.2996 18.4615 11.1261 18.485C11.0276 18.4979 10.9298 18.5157 10.8305 18.5257C10.5563 18.5521 10.2785 18.5679 9.99788 18.5679C9.71727 18.5679 9.4395 18.5522 9.16528 18.5257C9.06604 18.5157 8.96822 18.4979 8.86965 18.485C8.69615 18.4615 8.52335 18.4386 8.35411 18.4058C8.237 18.3829 8.12274 18.3522 8.0071 18.3251C7.85928 18.2894 7.71218 18.2537 7.56725 18.2115C7.44516 18.1751 7.32446 18.1323 7.20379 18.0909C7.07171 18.0452 6.93958 17.9987 6.81105 17.9481C6.68252 17.8974 6.56115 17.8417 6.43831 17.7853C6.31547 17.7289 6.2048 17.676 6.09058 17.6174C5.96134 17.5503 5.83353 17.4796 5.70784 17.4032C5.60789 17.3447 5.50861 17.2847 5.4115 17.2226C5.27799 17.1376 5.14657 17.0491 5.01733 16.9555C4.9352 16.897 4.85525 16.8363 4.77525 16.7749C4.63957 16.6699 4.50535 16.5606 4.3754 16.4471C4.34398 16.4235 4.3154 16.3935 4.28473 16.3664C4.31666 13.9373 5.87712 11.7925 8.17847 11.0146C9.32917 11.5619 10.6652 11.5619 11.8159 11.0146C14.1172 11.7925 15.6776 13.9373 15.7096 16.3664C15.6796 16.3935 15.651 16.4207 15.6204 16.4471ZM7.50721 5.72554C8.28035 4.35054 10.0217 3.86266 11.3967 4.6358C12.7717 5.40894 13.2596 7.15032 12.4865 8.52531C12.2299 8.98152 11.853 9.35849 11.3967 9.61505C11.3932 9.61505 11.3889 9.61505 11.3846 9.61932C11.1952 9.72471 10.9951 9.80947 10.7876 9.87211C10.7505 9.88282 10.7162 9.89708 10.677 9.90637C10.6055 9.92495 10.5306 9.93779 10.457 9.95064C10.3185 9.97486 10.1784 9.98892 10.0379 9.99277H9.95646C9.81592 9.98892 9.6758 9.97486 9.53732 9.95064C9.4659 9.93779 9.39021 9.92495 9.31741 9.90637C9.27955 9.89708 9.24599 9.88282 9.20675 9.87211C8.99927 9.80947 8.79915 9.72475 8.60979 9.61932L8.59694 9.61505C7.22195 8.84191 6.73407 7.10053 7.50721 5.72554ZM16.9763 14.9505C16.5181 12.8132 15.1107 11.0013 13.1533 10.0285C14.7534 8.28549 14.6375 5.57529 12.8945 3.97516C11.1514 2.37503 8.44122 2.49093 6.84109 4.23398C5.33682 5.87264 5.33682 8.38992 6.84109 10.0285C4.88366 11.0013 3.47628 12.8132 3.01806 14.9505C0.279956 11.0936 1.18686 5.74738 5.04369 3.00927C8.90053 0.271165 14.2468 1.17806 16.9849 5.0349C18.0142 6.48474 18.5667 8.21901 18.5658 9.99708C18.5658 11.7736 18.01 13.5056 16.9763 14.9505Z"*/}
                    {/*              fill="#707070"/>*/}
                    {/*    </g>*/}
                    {/*    <defs>*/}
                    {/*        <clipPath id="clip0">*/}
                    {/*            <rect width="20" height="20" fill="white"/>*/}
                    {/*        </clipPath>*/}
                    {/*    </defs>*/}
                    {/*</svg>>*/}
                </NavLink>
            </div>
            <div className={s.dropdownItem} onClick={() => {props.getLogout()}}>
                <a className={s.a}>Sign Out</a>
                <svg className={s.exitLogo} xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                     viewBox="0 0 24 23.92">
                    <g id="logout" transform="translate(0 -0.85)">
                        <g id="Сгруппировать_85" data-name="Сгруппировать 85" transform="translate(0 0.85)">
                            <g id="Сгруппировать_84" data-name="Сгруппировать 84">
                                <path id="Контур_35" data-name="Контур 35"
                                      d="M11.96,22.777H2.99a1,1,0,0,1-1-1V3.84a1,1,0,0,1,1-1h8.97a1,1,0,0,0,0-1.993H2.99A2.994,2.994,0,0,0,0,3.84V21.78a2.994,2.994,0,0,0,2.99,2.99h8.97a1,1,0,0,0,0-1.993Z"
                                      transform="translate(0 -0.85)" fill="#707070"/>
                            </g>
                        </g>
                        <g id="Сгруппировать_87" data-name="Сгруппировать 87" transform="translate(7.973 5.834)">
                            <g id="Сгруппировать_86" data-name="Сгруппировать 86">
                                <path id="Контур_36" data-name="Контур 36"
                                      d="M185.83,113.432l-6.06-5.98a1,1,0,1,0-1.4,1.419l4.331,4.274H171.1a1,1,0,0,0,0,1.993h11.6l-4.331,4.274a1,1,0,1,0,1.4,1.419l6.06-5.98a1,1,0,0,0,0-1.419Z"
                                      transform="translate(-170.1 -107.165)" fill="#707070"/>
                            </g>
                        </g>
                    </g>
                </svg>
            </div>
        </div>
    </div>
}

class Header extends React.Component {
    componentDidMount() {
        if (this.props.isAuth)
            this.props.getMyDataProfile(this.props.id)
    }

    componentDidUpdate(prevProps, prevState, snapshot) {
        if ((this.props.isAuth !== prevProps.isAuth) && this.props.isAuth)
            this.props.getMyDataProfile(this.props.id)
    }

    render() {
        return (
            <header className={s.header}>
                <img className={s.logo} src="https://turbologo.ru/turbologo-logo.png"></img>
                {this.props.isAuth ? <HeaderUserBlock {...this.props}/> : null}
            </header>
        )
    }
}

let mapStateToProps = (state) => ({
    isAuth: state.auth.isAuth,
    login: state.auth.login,
    id: state.auth.id,
    avatar: state.auth.avatar,
})
let mapDispatchToProps = {
    setAuthUserData,
    getMyDataProfile,
    getLogout
}

export default connect(mapStateToProps, mapDispatchToProps)(Header);
